name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: cloner
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: cloner

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Prepare archive
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            cp "target/${{ matrix.target }}/release/${{ matrix.binary_name }}" dist/
            cd dist
            tar czf "../${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz" *
          else
            cp "target/${{ matrix.target }}/release/${{ matrix.binary_name }}" dist/
            cd dist
            zip -r "../${{ matrix.binary_name }}-${{ matrix.target }}.zip" *
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.binary_name }}-${{ matrix.target }}
          path: ${{ matrix.binary_name }}-${{ matrix.target }}.*

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.binary_name }}-${{ matrix.target }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
